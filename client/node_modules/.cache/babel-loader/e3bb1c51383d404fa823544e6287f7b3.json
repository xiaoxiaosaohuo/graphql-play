{"ast":null,"code":"var _jsxFileName = \"/Users/jinxin/GitHubRepo/graphql-play/client/src/components/AddBook.js\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { getAuthorsQuery } from '../queries/queries';\n\nconst AddBook = props => {\n  const {\n    name,\n    setName\n  } = useState('');\n  const {\n    genre,\n    setGenre\n  } = useState(\"\");\n  const {\n    authorId,\n    setAuthorId\n  } = useState(\"\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getAuthorsQuery);\n\n  const submitForm = e => {\n    e.preventDefault();\n    console.log(name);\n  };\n\n  const displayAuthors = () => {\n    if (loading) {\n      return React.createElement(\"option\", {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Loading authors\");\n    } else {\n      console.log(data);\n      return data.authors.map(author => {\n        return React.createElement(\"option\", {\n          key: author._id,\n          value: author.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, author.name);\n      });\n    }\n  };\n\n  return React.createElement(\"form\", {\n    id: \"add-book\",\n    onSubmit: submitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Book name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Genre:\"), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setGenre(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Author:\"), React.createElement(\"select\", {\n    onChange: e => setAuthorId(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Select author\"), displayAuthors())), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"+\"));\n};\n\nexport default AddBook;","map":{"version":3,"sources":["/Users/jinxin/GitHubRepo/graphql-play/client/src/components/AddBook.js"],"names":["React","useState","useQuery","gql","getAuthorsQuery","AddBook","props","name","setName","genre","setGenre","authorId","setAuthorId","loading","error","data","submitForm","e","preventDefault","console","log","displayAuthors","authors","map","author","_id","id","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAAQC,eAAR,QAA8B,oBAA9B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAS;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEQ,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEU,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAEY,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACE,eAAD,CAAzC;;AACA,QAAMY,UAAU,GAAIC,CAAD,IAAM;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACH,GAHD;;AAIA,QAAMc,cAAc,GAAG,MAAI;AACvB,QAAGR,OAAH,EAAW;AACP,aAAQ;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAR;AACH,KAFD,MAEO;AACLM,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACE,aAAOA,IAAI,CAACO,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IAAI;AAC9B,eAAQ;AAAQ,UAAA,GAAG,EAAGA,MAAM,CAACC,GAArB;AAA2B,UAAA,KAAK,EAAED,MAAM,CAACE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+CF,MAAM,CAACjB,IAAtD,CAAR;AACH,OAFM,CAAP;AAGH;AACJ,GATD;;AAUA,SACE;AAAM,IAAA,EAAE,EAAC,UAAT;AAAoB,IAAA,QAAQ,EAAES,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEC,CAAC,IAAIT,OAAO,CAACS,CAAC,CAACU,MAAF,CAASC,KAAV,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEX,CAAC,IAAIP,QAAQ,CAACO,CAAC,CAACU,MAAF,CAASC,KAAV,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EASE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,IAAA,QAAQ,EAAEX,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACU,MAAF,CAASC,KAAV,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGP,cAAc,EAFjB,CAFF,CATF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAhBF,CADF;AAoBH,CAvCD;;AAyCA,eAAehB,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport {getAuthorsQuery} from '../queries/queries';\n\nconst AddBook = (props)=>{\n    const { name, setName } = useState('');\n    const { genre, setGenre } = useState(\"\");\n    const { authorId, setAuthorId } = useState(\"\");\n    const { loading, error, data } = useQuery(getAuthorsQuery);\n    const submitForm = (e)=> {\n        e.preventDefault()\n        console.log(name);\n    }\n    const displayAuthors = ()=>{\n        if(loading){\n            return( <option disabled>Loading authors</option> );\n        } else {\n          console.log(data);\n            return data.authors.map(author => {\n                return( <option key={ author._id } value={author.id}>{ author.name }</option> );\n            });\n        }\n    }\n    return (\n      <form id=\"add-book\" onSubmit={submitForm}>\n        <div className=\"field\">\n          <label>Book name:</label>\n          <input type=\"text\" onChange={e => setName(e.target.value)} />\n        </div>\n        <div className=\"field\">\n          <label>Genre:</label>\n          <input type=\"text\" onChange={e => setGenre(e.target.value)} />\n        </div>\n        <div className=\"field\">\n          <label>Author:</label>\n          <select onChange={e => setAuthorId(e.target.value)}>\n            <option>Select author</option>\n            {displayAuthors()}\n          </select>\n        </div>\n        <button>+</button>\n      </form>\n    );\n}\n\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}