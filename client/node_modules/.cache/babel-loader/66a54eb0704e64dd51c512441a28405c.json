{"ast":null,"code":"var _jsxFileName = \"/Users/jinxin/GitHubRepo/graphql-play/client/src/components/Booklist.js\";\nimport React, { useState } from 'react';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { getBooksQuery } from \"../queries/queries\";\nimport BookDetails from './BookDetails';\n\nconst BookList = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  const [selected, setSelected] = useState(null);\n  console.log(data);\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    id: \"book-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, data.books.map(book => {\n    return React.createElement(\"li\", {\n      key: book.id,\n      onClick: e => setSelected(book.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, book.name);\n  })), React.createElement(BookDetails, {\n    bookId: this.state.selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nexport default BookList;","map":{"version":3,"sources":["/Users/jinxin/GitHubRepo/graphql-play/client/src/components/Booklist.js"],"names":["React","useState","useQuery","getBooksQuery","BookDetails","BookList","loading","error","data","selected","setSelected","console","log","books","map","book","id","e","name","state"],"mappings":";AACA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,QAAQ,GAAG,MAAI;AACjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACC,aAAD,CAAzC;AACA,QAAM,CAACM,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,IAAD,CAAvC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AACtB,WACE;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,MAAA,OAAO,EAAEC,CAAC,IAAIP,WAAW,CAACK,IAAI,CAACC,EAAN,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACG,IADR,CADF;AAKD,GANA,CADH,CADF,EAUE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAE,KAAKC,KAAL,CAAWV,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcH,CApBD;;AAsBA,eAAeJ,QAAf","sourcesContent":["// @flow\nimport React,{useState} from 'react';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { getBooksQuery } from \"../queries/queries\";\nimport BookDetails from './BookDetails';\nconst BookList = ()=>{\n    const { loading, error, data } = useQuery(getBooksQuery);\n    const [selected,setSelected] = useState(null);\n    console.log(data)\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    return (\n      <div>\n        <ul id=\"book-list\">\n          {data.books.map(book => {\n            return (\n              <li key={book.id} onClick={e => setSelected(book.id)}>\n                {book.name}\n              </li>\n            );\n          })}\n        </ul>\n        <BookDetails bookId={this.state.selected} />\n      </div>\n    );\n}\n\nexport default BookList;"]},"metadata":{},"sourceType":"module"}